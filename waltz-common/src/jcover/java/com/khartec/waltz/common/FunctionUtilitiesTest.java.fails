package com.khartec.waltz.common;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import java.util.function.Supplier;

import org.junit.jupiter.api.Test;

/**
 * Unit tests for com.khartec.waltz.common.FunctionUtilities
 *
 * @author Diffblue Cover
 */

class FunctionUtilitiesTest {

    @Test
    void discardResult() {
        FunctionUtilities.discardResult(new Object());
    }

    @Test
    void timeReturnsFoo() {
        @SuppressWarnings("unchecked")
        Supplier<String> supplier = mock(Supplier.class);
        when(supplier.get())
            .thenReturn("foo");
        assertThat(FunctionUtilities.<String>time("Acme", supplier), is("foo"));
    }

    @Test
    void time() {
        FunctionUtilities.time("Acme", Thread.currentThread());
    }

    @Test
    void alwaysBiResultIsFoo() {
        // pojo java.util.function.BiFunction<String, String, String>
    }

    @Test
    void alwaysReturnsFoo() {
        assertThat(FunctionUtilities.<String, String>always("foo").apply(new Object()), is("foo"));
    }
}
